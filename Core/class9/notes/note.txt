Static Variable
`````````````````````
Static Variable memory is located at the time pf class Loading

There is only one copy of Static variable and it will be shared by each and every object.

It is not mandatory to initiate static variable.

If we are not initiating then JVM will provide default value.

Static variable memory stroed in method area.

Note: 1.8 onwards static variables are stored in heap area.


If we make changes in non static variable of an object then that changes will be fall in that particular object.


Q: Can Static and Non Static variable name be same?
Ans: It will confuse compiler to recognise which value useer want to acces, so it will give compile time error.
The name can't be same.

Difference Betweeen Static and Non-Static variables
=======================================================

Static
```````````
-> We we access static variables in three ways 
1 - Directly
2 - By Objects
3 - By Class name

-> There is only one copy of static variable and it will be shared by each and every object.
Non Static
-> It is stored in method area.
-> It is not mandatory to initialize static variable. If we are not initializing then JVM will provide default value i.e 0.
-> It is declared within the class but outside the method with static keyword. 
Non - Static
`````````````````
-> We access Non Static variables through object only.
-> It is stored in heap area.
-> If we make any changes in Non-Static variable of an object then that changes will be for that particular object.
-> It is mandatory to initialize Non - Static variables.
-> It is declared withing the class but outside the method without static keyword.


Local Variable
===============
-> It is a temperaory variable.
declared
``````````````
It is declared inside a method, block or constructor.

Access 
````````````
We can access local variable directly.

It is mandatory to initiate local variable before using that object.

public static void main(String []args){
    int x = 10;
    System.out.println("Hyy");
} // No error

public static void main(String []args){
    int x =10;
    System.out.println(x)
} // Compile time error

Default value
```````````````````
-> Default value concept is not applicable for local variable.

Scope
```````````````
Scope of local variable is within the method which has been declared. If we try outside that method we'll get compile time error saying can not find symbol.

-> Local Variable - Stack area
Local Variable memory is allocated when method execution starts and it will be destroyed.





